import { createReducer } from "@reduxjs/toolkit";

import {
  signupRequest,
  signupSuccess,
  signupError,
  logInRequest,
  logInSuccess,
  logInError,
  logoutRequest,
  logoutSuccess,
  logoutError,
  gettingCurrentUserRequest,
  gettingCurrentUserSuccess,
  gettingCurrentUserError,
  resetPassRequest,
  resetPassSuccess,
  resetPassError,
} from "../auth/authActions";

import {
  addProjectRequest,
  addProjectSuccess,
  addProjectError,
  deleteProjectRequest,
  deleteProjectSuccess,
  deleteProjectError,
  byIdRequest,
  byIdSuccess,
  byIdError,
  changeProjectNameRequest,
  changeProjectNameSuccess,
  changeProjectNameError,
  changeProjectDescRequest,
  changeProjectDescSuccess,
  changeProjectDescError,
} from "../projects/projectActions";

import {
  createRequest,
  createSuccess,
  createError,
  deleteRequest,
  deleteSuccess,
  deleteError,
  changeNameRequest,
  changeNameSuccess,
  changeNameError,
  sprintByIdRequest,
  sprinByIdSuccess,
  sprinByIdError,
} from "../sprints/sprintsActions";

import {
  createTaskRequest,
  createTaskSuccess,
  createTaskError,
  deleteTaskRequest,
  deleteTaskSuccess,
  deleteTaskError,
  changeTaskNameRequest,
  changeTaskNameSuccess,
  changeTaskNameError,
  getTaskbyIdRequest,
  getTaskbyIdSuccess,
  getTaskbyIdError,
  updateTaskTimeRequest,
  updateTaskTimeSuccess,
  updateTaskTimeError,
  searchTaskByNameRequest,
  searchTaskByNameSucces,
  searchTaskByNameError,
} from "../tasks/tasksActions";

const loadingReducer = createReducer(false, {
  [signupRequest]: () => true,
  [signupSuccess]: () => false,
  [signupError]: () => false,
  [logInRequest]: () => true,
  [logInSuccess]: () => false,
  [logInError]: () => false,
  [logoutRequest]: () => true,
  [logoutSuccess]: () => false,
  [logoutError]: () => false,
  [gettingCurrentUserRequest]: () => true,
  [gettingCurrentUserSuccess]: () => false,
  [gettingCurrentUserError]: () => false,
  [resetPassRequest]: () => true,
  [resetPassSuccess]: () => false,
  [resetPassError]: () => false,
  [addProjectRequest]: () => true,
  [addProjectSuccess]: () => false,
  [addProjectError]: () => false,
  [deleteProjectRequest]: () => true,
  [deleteProjectSuccess]: () => false,
  [deleteProjectError]: () => false,
  [byIdRequest]: () => true,
  [byIdSuccess]: () => false,
  [byIdError]: () => false,
  [changeProjectNameRequest]: () => true,
  [changeProjectNameSuccess]: () => false,
  [changeProjectNameError]: () => false,
  [changeProjectDescRequest]: () => true,
  [changeProjectDescSuccess]: () => false,
  [changeProjectDescError]: () => false,
  [createRequest]: () => true,
  [createSuccess]: () => false,
  [createError]: () => false,
  [deleteRequest]: () => true,
  [deleteSuccess]: () => false,
  [deleteError]: () => false,
  [changeNameRequest]: () => true,
  [changeNameSuccess]: () => false,
  [changeNameError]: () => false,
  [sprintByIdRequest]: () => true,
  [sprinByIdSuccess]: () => false,
  [sprinByIdError]: () => false,
  [createTaskRequest]: () => true,
  [createTaskSuccess]: () => false,
  [createTaskError]: () => false,
  [deleteTaskRequest]: () => true,
  [deleteTaskSuccess]: () => false,
  [deleteTaskError]: () => false,
  [changeTaskNameRequest]: () => true,
  [changeTaskNameSuccess]: () => false,
  [changeTaskNameError]: () => false,
  [getTaskbyIdRequest]: () => true,
  [getTaskbyIdSuccess]: () => false,
  [getTaskbyIdError]: () => false,
  [updateTaskTimeRequest]: () => true,
  [updateTaskTimeSuccess]: () => false,
  [updateTaskTimeError]: () => false,
  [searchTaskByNameRequest]: () => true,
  [searchTaskByNameSucces]: () => false,
  [searchTaskByNameError]: () => false,
});
export default loadingReducer;
